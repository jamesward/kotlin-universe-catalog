on:
  push:
    branches:
      - 'main'
  workflow_call:
    secrets:
      GPG_PRIVATE_KEY:
        required: true
      GPG_PASSPHRASE:
        required: true
      SONATYPE_USERNAME:
        required: true
      SONATYPE_PASSWORD:
        required: true
      GRADLE_PUBLISH_KEY:
        required: true
      GRADLE_PUBLISH_SECRET:
        required: true

concurrency: ci-${{ github.ref }}

jobs:
  check-env:
    outputs:
      credentials-defined: ${{ steps.get-credentials.outputs.defined }}
    runs-on: ubuntu-latest
    steps:
      - id: get-credentials
        env:
          GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}
          GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
          SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
          SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
          GRADLE_PUBLISH_KEY: ${{ secrets.GRADLE_PUBLISH_KEY }}
          GRADLE_PUBLISH_SECRET: ${{ secrets.GRADLE_PUBLISH_SECRET }}
        if: ${{ env.GPG_PRIVATE_KEY != '' && env.GPG_PASSPHRASE != '' && env.SONATYPE_USERNAME != '' && env.SONATYPE_PASSWORD != '' && env.GRADLE_PUBLISH_KEY != '' && env.GRADLE_PUBLISH_SECRET != '' }}
        run: |
          echo "defined=true" >> $GITHUB_OUTPUT

  publish:
    needs: [ check-env ]
    if: needs.check-env.outputs.credentials-defined == 'true'
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v3

      - name: Try Publish
        env:
          SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
          SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
          GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}
          GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
        run: |
          ./gradlew publishPlugins -Pgradle.publish.key=${{ secrets.GRADLE_PUBLISH_KEY }} -Pgradle.publish.secret=${{ secrets.GRADLE_PUBLISH_SECRET }} --validate-only
          ./gradlew publishToSonatype

      - id: get-version
        name: Get Version
        run: |
          echo "version=$(./gradlew :version -q)" >> $GITHUB_OUTPUT

      - name: Update README
        run: |
          sed -ie "s/version \"[^\"]*\"/version \"${{ steps.get-version.outputs.version }}\"/" README.md
          sed -ie "s/stables:[^\"]*\"/stables:${{ steps.get-version.outputs.version }}\"/" README.md
          sed -ie "s/version \"[^\"]*\"/version \"${{ steps.get-version.outputs.version }}\"/" example/settings.gradle.kts

      - name: Commit README
        uses: test-room-7/action-update-file@v1
        with:
          file-path: |
            README.md
            example/settings.gradle.kts
          commit-msg: Update version
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Git Tag
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.get-version.outputs.version }}

      - name: Complete Publish
        env:
          SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
          SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
          GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}
          GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
        run: |
          ./gradlew publishPlugins -Pgradle.publish.key=${{ secrets.GRADLE_PUBLISH_KEY }} -Pgradle.publish.secret=${{ secrets.GRADLE_PUBLISH_SECRET }}
          ./gradlew findSonatypeStagingRepository closeAndReleaseSonatypeStagingRepository
